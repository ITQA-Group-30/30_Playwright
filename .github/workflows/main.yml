name: Automated Testing Suite

permissions:
  contents: write
  pages: write
  id-token: write

env:
  SITE_ARTIFACT: "github-pages"
  ACTIONS_STEP_DEBUG: true

on:
  push:
    branches: [main, master, development]
    paths:
      - 'UI Testing/**'
      - 'API Testing/**'
  pull_request:
    branches: [main, master, development]
    paths:
      - 'UI Testing/**'
      - 'API Testing/**'
  workflow_dispatch:

jobs:
  combined-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set JAVA_HOME
        run: |
          echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))" >> $GITHUB_ENV
          echo "JAVA_HOME is set to: $JAVA_HOME"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.5.1'
          cache: 'npm'

      - name: Setup Display
        run: |
          sudo apt-get install -y xvfb
          echo "DISPLAY=:99" >> $GITHUB_ENV

      # UI Tests
      - name: Install UI Dependencies
        working-directory: ./UI Testing
        run: npm ci

      - name: Install Playwright
        working-directory: ./UI Testing
        run: npx playwright install chromium --with-deps

      - name: Run UI Tests
        working-directory: ./UI Testing
        run: |
          xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" npx cucumber-js --retry 1
        env:
          CI: true
          PLAYWRIGHT_HEADLESS: true
        continue-on-error: true

      # API Tests
      - name: Setup API Server
        working-directory: ./API Testing
        run: |
          mkdir -p server
          wget --output-document=server/demo-0.0.1-SNAPSHOT.jar "https://firebasestorage.googleapis.com/v0/b/flashmart-c51b3.appspot.com/o/demo-0.0.1-SNAPSHOT.jar?alt=media&token=df7721d4-e5fd-416a-9a26-a550bf1d0a53"
          nohup java -jar server/demo-0.0.1-SNAPSHOT.jar > server.log 2>&1 &
          until curl --silent --head http://localhost:7081/api/books; do
            sleep 2
          done

      - name: Install API Dependencies
        working-directory: ./API Testing
        run: npm ci

      - name: Run API Tests
        working-directory: ./API Testing
        run: npx cucumber-js --format json:allure-results/results.json
        continue-on-error: true

      # Combined Reports
      - name: Generate Combined Report
        if: always()
        run: |
          npm install -g allure-commandline
          mkdir -p combined-results
          cp -r ./UI\ Testing/allure-results/* combined-results/ || true
          cp -r ./API\ Testing/allure-results/* combined-results/ || true
          allure generate combined-results --clean -o allure-report

      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          publish_dir: allure-report
          enable_jekyll: false
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'

      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: |
            allure-report
            */server.log
          retention-days: 14
