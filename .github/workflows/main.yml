name: UI Automation Tests

# Add permissions block at the top level
permissions:
  contents: read
  pages: write
  id-token: write

# Configure GitHub Pages
env:
  # Name of the artifact containing the site contents
  SITE_ARTIFACT: "github-pages"

on:
  push:
    branches: [main, master, development]
    paths:
      - 'UI Testing/**'
  pull_request:
    branches: [main, master, development]
    paths:
      - 'UI Testing/**'
  workflow_dispatch:

jobs:
  ui-tests:
    name: Run UI Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./UI Testing

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.5.1'
          cache: 'npm'
          cache-dependency-path: './UI Testing/package-lock.json'

      - name: Install Dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install chromium --with-deps

      - name: Setup Display
        run: |
          sudo apt-get install -y xvfb
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Run Cucumber Tests
        run: |
          xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" npx cucumber-js
        env:
          CI: true
          PLAYWRIGHT_HEADLESS: true

      - name: Generate Allure Report
        if: always()
        run: |
          npm install -g allure-commandline
          allure generate allure-results --clean -o allure-report

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ui-test-results
          path: |
            ./UI Testing/allure-report/
            ./UI Testing/test-results/
          retention-days: 14

      # Configure GitHub Pages
      - name: Setup Pages
        if: always()
        uses: actions/configure-pages@v2

      - name: Upload Pages Artifact
        if: always()
        uses: actions/upload-pages-artifact@v1
        with:
          path: './UI Testing/allure-report'

  # Add a separate deployment job
  deploy:
    needs: ui-tests
    runs-on: ubuntu-latest
    if: always()
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
