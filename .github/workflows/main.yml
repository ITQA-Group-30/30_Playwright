name: Automated Testing Suite

permissions:
  contents: write
  pages: write
  id-token: write

env:
  SITE_ARTIFACT: "github-pages"
  ACTIONS_STEP_DEBUG: true

on:
  push:
    branches: [main, master, development]
    paths:
      - 'UI Testing/**'
      - 'API Testing/**'
  pull_request:
    branches: [main, master, development]
    paths:
      - 'UI Testing/**'
      - 'API Testing/**'
  workflow_dispatch:

jobs:
  ui-tests:
    name: Run UI Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./UI Testing

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))" >> $GITHUB_ENV

      - uses: actions/setup-node@v3
        with:
          node-version: '20.5.1'
          cache: 'npm'
          cache-dependency-path: './UI Testing/package-lock.json'

      - run: npm ci
        continue-on-error: true

      - run: npx playwright install chromium --with-deps
        continue-on-error: true

      - name: Setup Display
        run: |
          sudo apt-get install -y xvfb
          echo "DISPLAY=:99" >> $GITHUB_ENV
        continue-on-error: true

      - name: Run Tests
        run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" npx cucumber-js --retry 1
        env:
          CI: true
          PLAYWRIGHT_HEADLESS: true
          DEBUG: pw:api
        continue-on-error: true

      - name: Generate Report
        if: always()
        run: |
          npm install -g allure-commandline
          allure generate allure-results --clean -o allure-report
        continue-on-error: true

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ui-test-report
          path: ./UI Testing/allure-report
          retention-days: 14

  api-tests:
    name: Run API Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./API Testing

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))" >> $GITHUB_ENV

      - name: Setup Server
        run: |
          mkdir -p server
          wget -O server/demo-0.0.1-SNAPSHOT.jar "https://firebasestorage.googleapis.com/v0/b/flashmart-c51b3.appspot.com/o/demo-0.0.1-SNAPSHOT.jar?alt=media&token=df7721d4-e5fd-416a-9a26-a550bf1d0a53"
        continue-on-error: true

      - name: Start Server
        run: |
          nohup java -jar server/demo-0.0.1-SNAPSHOT.jar > server.log 2>&1 &
          until curl --silent --head http://localhost:7081/api/books; do
            sleep 2
          done
        continue-on-error: true

      - uses: actions/setup-node@v3
        with:
          node-version: '20'

      - run: npm ci
        continue-on-error: true

      - name: Run Tests
        run: npx cucumber-js --format json:allure-results/results.json
        continue-on-error: true

      - name: Generate Report
        if: always()
        run: |
          npm install -g allure-commandline
          allure generate allure-results --clean -o allure-report
        continue-on-error: true

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: api-test-report
          path: ./API Testing/allure-report
          retention-days: 14

      - name: Stop Server
        if: always()
        run: pkill -f 'java -jar server/demo-0.0.1-SNAPSHOT.jar'
        continue-on-error: true

  pages:
    needs: [ui-tests, api-tests]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - uses: actions/checkout@v3

      - name: Download Reports
        uses: actions/download-artifact@v3
        with:
          path: reports

      - name: Prepare Reports
        run: |
          mkdir -p site
          mv reports/ui-test-report site/ui-report
          mv reports/api-test-report site/api-report

      - uses: actions/configure-pages@v3

      - uses: actions/upload-pages-artifact@v2
        with:
          path: site

      - uses: actions/deploy-pages@v2
        id: deployment
