[
  {
    "description": "  As a user of the library system\n  I want to test the create book functionality\n  So that I can ensure it handles various scenarios correctly",
    "elements": [
      {
        "description": "",
        "id": "create-book-api-tests;create-a-book-without-a-title",
        "keyword": "Scenario",
        "line": 10,
        "name": "Create a book without a title",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "I am logged in with valid credentials",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "title",
                      "author"
                    ]
                  },
                  {
                    "cells": [
                      "",
                      "cha"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 11,
            "name": "I create a book with the following details:",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 14,
            "name": "the response status code 400",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "the response message \"Mandatory parameter 'title' is missing.\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@missing-title",
            "line": 9
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-book-api-tests;create-a-book-without-an-author",
        "keyword": "Scenario",
        "line": 18,
        "name": "Create a book without an author",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "I am logged in with valid credentials",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "title",
                      "author"
                    ]
                  },
                  {
                    "cells": [
                      "book00",
                      ""
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 19,
            "name": "I create a book with the following details:",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 22,
            "name": "the response status code 400",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 23,
            "name": "the response message \"Mandatory parameter 'author' is missing.\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@missing-author",
            "line": 17
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-book-api-tests;create-a-book-with-invalid-id-type",
        "keyword": "Scenario",
        "line": 26,
        "name": "Create a book with invalid ID type",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "I am logged in with valid credentials",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "id",
                      "title",
                      "author"
                    ]
                  },
                  {
                    "cells": [
                      "abc",
                      "Book8",
                      "John"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 27,
            "name": "I create a book with the following details:",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 30,
            "name": "the response status code 400",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 31,
            "name": "the response message \"Invalid parameter 'id'.\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@invalid-id",
            "line": 25
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-book-api-tests;successfully-create-a-book",
        "keyword": "Scenario",
        "line": 34,
        "name": "Successfully create a book",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "I am logged in with valid credentials",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "id",
                      "title",
                      "author"
                    ]
                  },
                  {
                    "cells": [
                      "1056",
                      "Book1056",
                      "saman"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 35,
            "name": "I create a book with the following details:",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 38,
            "name": "the response status code 201",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 39,
            "name": "the response message \"Book created successfully.\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@valid-request",
            "line": 33
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-book-api-tests;create-a-book-with-a-duplicate-title",
        "keyword": "Scenario",
        "line": 42,
        "name": "Create a book with a duplicate title",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "I am logged in with valid credentials",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "id",
                      "title",
                      "author"
                    ]
                  },
                  {
                    "cells": [
                      "124",
                      "Book8",
                      "Jane"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 43,
            "name": "I create a book with the following details:",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 46,
            "name": "the response status code 409",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 47,
            "name": "the response message \"A book with the same title already exists.\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@duplicate-title",
            "line": 41
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-book-api-tests;create-a-new-book-with-the-existing-bookname-and-author",
        "keyword": "Scenario",
        "line": 50,
        "name": "Create a new book with the existing bookname and author",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "I am logged in with valid credentials",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "id",
                      "title",
                      "author"
                    ]
                  },
                  {
                    "cells": [
                      "666",
                      "Book8",
                      "Chaami"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 51,
            "name": "I create a book with the following details:",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 54,
            "name": "the response status code 409",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 55,
            "name": "the response message \"Book Already Exists.\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@duplicate-book",
            "line": 49
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "create-book-api-tests",
    "line": 1,
    "keyword": "Feature",
    "name": "Create Book API Tests",
    "tags": [],
    "uri": "features\\createBook\\createBook.feature"
  },
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "delete-books-api;successfully-delete-an-existing-book",
        "keyword": "Scenario",
        "line": 2,
        "name": "Successfully delete an existing book",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 3,
            "name": "I am logged in as an authorized admin user",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 4,
            "name": "I delete the book with ID 1",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 5,
            "name": "the response status code should be 200",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 6,
            "name": "the response message should be \"Book deleted successfully.\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "delete-books-api;attempt-to-delete-a-book-that-does-not-exist",
        "keyword": "Scenario",
        "line": 8,
        "name": "Attempt to delete a book that does not exist",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 9,
            "name": "I am logged in as an authorized admin user",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 10,
            "name": "I delete the book with ID 999",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 11,
            "name": "the response status code should be 404",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 12,
            "name": "the response message should be \"Book not found.\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "delete-books-api;attempt-to-delete-a-book-as-an-unauthorized-user",
        "keyword": "Scenario",
        "line": 14,
        "name": "Attempt to delete a book as an unauthorized user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 15,
            "name": "I am logged in as an unauthorized user",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 16,
            "name": "I delete the book with ID 102",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 17,
            "name": "the response status code should be 403",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 18,
            "name": "the response message should be \"You are not authorized to delete the book.\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "delete-books-api;attempt-to-delete-a-book-with-an-invalid-id",
        "keyword": "Scenario",
        "line": 20,
        "name": "Attempt to delete a book with an invalid ID",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 21,
            "name": "I am logged in as an authorized admin user",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 22,
            "name": "I delete the book with ID \"abc\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 23,
            "name": "the response status code should be 400",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 24,
            "name": "the response message should be \"Invalid parameter 'id'.\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "delete-books-api;attempt-to-delete-a-book-without-authentication",
        "keyword": "Scenario",
        "line": 26,
        "name": "Attempt to delete a book without authentication",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 27,
            "name": "I am not logged in",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 28,
            "name": "I delete the book with ID 103",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 29,
            "name": "the response status code should be 401",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 30,
            "name": "the response message should be \"You are not authorized to delete the book.\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      }
    ],
    "id": "delete-books-api",
    "line": 1,
    "keyword": "Feature",
    "name": "Delete Books API",
    "tags": [],
    "uri": "features\\deleteBooks\\deleteBook.feature"
  },
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "demo-testing-information;demo-steps-creating",
        "keyword": "Scenario",
        "line": 3,
        "name": "Demo steps creating",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 4,
            "name": "checking demo",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 5,
            "name": "I print some message",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 6,
            "name": "I should see the result values",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      }
    ],
    "id": "demo-testing-information",
    "line": 1,
    "keyword": "Feature",
    "name": "Demo testing information",
    "tags": [],
    "uri": "features\\demo.feature"
  },
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "retrieve-books-from-the-library;valid-request-with-books-in-database",
        "keyword": "Scenario",
        "line": 5,
        "name": "Valid Request with Books in Database",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 6,
            "name": "I am logged in as a \"user\" with password \"password\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 7,
            "name": "there are books in the database",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 8,
            "name": "I send a GET request to",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 9,
            "name": "the response status code should be 200",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 10,
            "name": "the response should contain a list of books",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@getbooks",
            "line": 1
          },
          {
            "name": "@getbooks",
            "line": 4
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "retrieve-books-from-the-library;valid-request-with-no-books-in-database",
        "keyword": "Scenario",
        "line": 12,
        "name": "Valid Request with No Books in Database",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 13,
            "name": "I am logged in as a \"user\" with password \"password\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 14,
            "name": "the database has no books",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 15,
            "name": "I send a GET request to",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 16,
            "name": "the response status code should be 400",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 17,
            "name": "the response should contain an empty array",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@getbooks",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "retrieve-books-from-the-library;unauthorized-request",
        "keyword": "Scenario",
        "line": 19,
        "name": "Unauthorized Request",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 20,
            "name": "I am logged in with an invalid \"user\" with password \"wrongPassword\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 21,
            "name": "I send a GET request to",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 22,
            "name": "the response status code should be 401",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 23,
            "name": "the response should indicate an unauthorized access",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@getbooks",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "retrieve-books-from-the-library",
    "line": 2,
    "keyword": "Feature",
    "name": "Retrieve Books from the Library",
    "tags": [
      {
        "name": "@getbooks",
        "line": 1
      }
    ],
    "uri": "features\\getBooks\\getAllBooks.feature"
  },
  {
    "description": "  As an admin user\n  I want to retrieve book details by ID\n  So that I can view specific book information",
    "elements": [
      {
        "description": "",
        "id": "admin-retrieve-book-details-by-id;admin-request-with-negative-book-id",
        "keyword": "Scenario",
        "line": 10,
        "name": "Admin Request with Negative Book ID",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "I am authenticated as admin user",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 11,
            "name": "the admin sends a GET request with negative book id \"-1\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 12,
            "name": "the admin response status code should be 404",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 13,
            "name": "the error message should be \"Invalid | Empty Input Parameters in the Request\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@getBookById_Admin_Negative",
            "line": 9
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "admin-retrieve-book-details-by-id",
    "line": 1,
    "keyword": "Feature",
    "name": "Admin Retrieve Book Details by ID",
    "tags": [],
    "uri": "features\\getBooks\\getBookById_Admin.feature"
  },
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "validate-get-/api/books/{id}-api-for-user-role;retrieve-a-book-with-a-valid-id",
        "keyword": "Scenario",
        "line": 21,
        "name": "Retrieve a book with a valid ID",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 22,
            "name": "I am logged in as a user",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 23,
            "name": "I send a GET request to \"/api/books/1\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 24,
            "name": "I should receive a 200 response",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 25,
            "name": "the response should contain book details",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "validate-get-/api/books/{id}-api-for-user-role;retrieve-a-non-existing-book",
        "keyword": "Scenario",
        "line": 27,
        "name": "Retrieve a non-existing book",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 28,
            "name": "I am logged in as a user",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 29,
            "name": "I send a GET request to \"/api/books/9999\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 30,
            "name": "I should receive a 404 response",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 31,
            "name": "the response should say \"Book not found\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "validate-get-/api/books/{id}-api-for-user-role;retrieve-a-book-with-an-empty-id",
        "keyword": "Scenario",
        "line": 33,
        "name": "Retrieve a book with an empty ID",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 34,
            "name": "I am logged in as a user",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 35,
            "name": "I send a GET request to \"/api/books/\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 36,
            "name": "I should receive a 400 response",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 37,
            "name": "the response should say \"Invalid input\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "validate-get-/api/books/{id}-api-for-user-role;retrieve-a-book-with-a-non-integer-id",
        "keyword": "Scenario",
        "line": 39,
        "name": "Retrieve a book with a non-integer ID",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 40,
            "name": "I am logged in as a user",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 41,
            "name": "I send a GET request to \"/api/books/abc\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 42,
            "name": "I should receive a 400 response",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 43,
            "name": "the response should say \"Invalid input\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      }
    ],
    "id": "validate-get-/api/books/{id}-api-for-user-role",
    "line": 19,
    "keyword": "Feature",
    "name": "Validate GET /api/books/{id} API for User Role",
    "tags": [],
    "uri": "features\\getBooks\\getBookById_User.feature"
  },
  {
    "description": "  As a user of the library system\n  I want to test the update book functionality\n  So that I can ensure it handles various scenarios correctly",
    "elements": [
      {
        "description": "",
        "id": "update-book-api-tests;successfully-update-a-book",
        "keyword": "Scenario",
        "line": 10,
        "name": "Successfully Update a Book",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "I am logged in as aa \"admin\" with password \"password\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "id",
                      "title",
                      "author"
                    ]
                  },
                  {
                    "cells": [
                      "1",
                      "Updated Book Title",
                      "Updated Author"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 11,
            "name": "I try to update a book with valid details",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 14,
            "name": "the response status code should be aa 200",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "the response message should be aa \"Book details updated successfully\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@success",
            "line": 9
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "update-book-api-tests;invalid-data-type-for-id",
        "keyword": "Scenario",
        "line": 18,
        "name": "Invalid Data Type for ID",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "I am logged in as aa \"admin\" with password \"password\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "id",
                      "title",
                      "author"
                    ]
                  },
                  {
                    "cells": [
                      "abc",
                      "Updated Book Title",
                      "Updated Author"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 19,
            "name": "I try to update a book with invalid ID type",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 22,
            "name": "the response status code should be aa 400",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 23,
            "name": "the response message should be aa \"Invalid | Empty Input Parameters in the Request\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@invalid-id",
            "line": 17
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "update-book-api-tests;empty-request-body",
        "keyword": "Scenario",
        "line": 26,
        "name": "Empty Request Body",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "I am logged in as aa \"admin\" with password \"password\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "id"
                    ]
                  },
                  {
                    "cells": [
                      "1"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 27,
            "name": "I try to update a book with empty body",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 30,
            "name": "the response status code should be aa 400",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 31,
            "name": "the response message should be aa \"Invalid | Empty Input Parameters in the Request\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@empty-body",
            "line": 25
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "update-book-api-tests;update-non-existent-book",
        "keyword": "Scenario",
        "line": 34,
        "name": "Update Non-Existent Book",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "I am logged in as aa \"admin\" with password \"password\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "id",
                      "title",
                      "author"
                    ]
                  },
                  {
                    "cells": [
                      "999",
                      "Updated Book Title",
                      "Updated Author"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 35,
            "name": "I try to update a non-existent book",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 38,
            "name": "the response status code should be 404",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 39,
            "name": "the response message should be \"Book is not found\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@non-existent",
            "line": 33
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "update-book-api-tests;update-book-without-authentication",
        "keyword": "Scenario",
        "line": 42,
        "name": "Update Book Without Authentication",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "I am logged in as aa \"admin\" with password \"password\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "id",
                      "title",
                      "author"
                    ]
                  },
                  {
                    "cells": [
                      "1",
                      "Updated Book Title",
                      "Updated Author"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 43,
            "name": "I try to update a book without authentication",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 46,
            "name": "the response status code should be 401",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 47,
            "name": "the response message should be \"Unauthorized\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@unauthorized",
            "line": 41
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "update-book-api-tests;update-book-with-regular-user",
        "keyword": "Scenario",
        "line": 50,
        "name": "Update Book With Regular User",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "I am logged in as aa \"admin\" with password \"password\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 51,
            "name": "I am logged in as \"user\" with password \"password\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "id",
                      "title",
                      "author"
                    ]
                  },
                  {
                    "cells": [
                      "1",
                      "Updated Book Title",
                      "Updated Author"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 52,
            "name": "I try to update a book with valid details",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 55,
            "name": "the response status code should be 403",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 56,
            "name": "the response message should be \"Request api call is forbidden\"",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@forbidden",
            "line": 49
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "update-book-api-tests",
    "line": 1,
    "keyword": "Feature",
    "name": "Update Book API Tests",
    "tags": [],
    "uri": "features\\updateBooks\\updateBook.feature"
  }
]